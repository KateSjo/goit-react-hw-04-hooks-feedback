{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Statistics/Statistics.module.css"],"names":["Section","title","children","className","styles","SectionTitle","prototype","PropTypes","string","node","FeedbackOptions","props","BtnText","feedbacks","map","feedback","id","shortid","generate","statisticsItem","statisticsText","name","onClick","statisticsList","goodIncrement","neutralIncrement","badIncrement","arrayOf","Statistics","ID","feedbackMarckUp","style","StatisticsItem","Positivefeedback","StatisticsList","App","useState","good","setGood","neutral","setNeutral","bad","setBad","countTotalFeedback","state","total","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6SAGMA,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASC,UAAWC,IAAOJ,QAA3B,UACE,oBAAIG,UAAWC,IAAOC,aAAtB,SAAqCJ,IACpCC,MAGLF,EAAQM,UAAY,CAClBL,MAAOM,IAAUC,OACjBN,SAAUK,IAAUE,MAEPT,Q,gCCRTU,EAAkB,SAACC,GACvB,IACMC,EAAUD,EAAME,UAAUC,KAAI,SAACC,GACnC,OACE,oBAAIC,GAHSC,IAAQC,WAGPf,UAAWC,IAAOe,eAAhC,SACE,wBACEhB,UAAWC,IAAOgB,eAClBC,KAAMN,EACNO,QAASX,EAAMI,GAHjB,SAKGA,SAKT,OAAO,oBAAIZ,UAAWC,IAAOmB,eAAtB,SAAuCX,KAGhDF,EAAgBJ,UAAY,CAC1BkB,cAAejB,IAAUE,KACzBgB,iBAAkBlB,IAAUE,KAC5BiB,aAAcnB,IAAUE,KACxBI,UAAWN,IAAUoB,QAAQpB,IAAUC,SAE1BE,Q,gBCGAkB,EA7BI,SAACjB,GAClB,IAAMkB,EAAK,kBAAMZ,IAAQC,YACnBY,EAAkBnB,EAAME,UAAUC,KAAI,SAACC,GAC3C,MAAiB,qBAAbA,EAEA,oBAAIZ,UAAW4B,IAAMC,eAAgBhB,GAAIa,IAAzC,SACE,qDAAwBlB,EAAMsB,iBAAmB,SAKrD,oBAAIjB,GAAIa,IAAR,SACE,oBAAGb,GAAIa,IAAP,UACGd,EADH,MACgBJ,EAAMI,WAK5B,OAAO,oBAAIZ,UAAW4B,IAAMG,eAArB,SAAsCJ,KC6BhCK,MA5Cf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsBJ,mBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KAUMC,EAAqB,kBAAMN,EAAOE,EAAUE,GAGlD,OACE,gCACE,cAAC,EAAD,CAASxC,MAAM,YAAf,SACE,cAAC,EAAD,CACEoC,KAhBc,WACpBC,GAAQ,SAACM,GAAD,OAAWA,EAAQ,MAgBrBL,QAdiB,WACvBC,GAAW,SAACI,GAAD,OAAWA,EAAQ,MAcxBH,IAZa,WACnBC,GAAO,SAACE,GAAD,OAAWA,EAAQ,MAYpB/B,UAAW,CAAC,OAAQ,UAAW,WAGnC,cAAC,EAAD,CAASZ,MAAM,YAAf,SAC4B,IAAzB0C,IACC,mDAEA,cAAC,EAAD,CACE9B,UAAW,CAAC,OAAQ,UAAW,MAAO,QAAS,oBAC/CwB,KAAMA,EACNE,QAASA,EACTE,IAAKA,EACLI,MAAOF,IACPV,iBArBRI,GAAQM,IAAuB,aChBnCG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,eAAiB,wCAAwC,eAAiB,wCAAwC,eAAiB,0C,kBCArJD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,gC,kBCApED,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,eAAiB,sC","file":"static/js/main.de1eb188.chunk.js","sourcesContent":["import styles from \"./Section.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.Section}>\r\n    <h2 className={styles.SectionTitle}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\nSection.prototype = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\nexport default Section;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\nimport shortid from \"shortid\";\r\n\r\nconst FeedbackOptions = (props) => {\r\n  const ID = () => shortid.generate();\r\n  const BtnText = props.feedbacks.map((feedback) => {\r\n    return (\r\n      <li id={ID()} className={styles.statisticsItem}>\r\n        <button\r\n          className={styles.statisticsText}\r\n          name={feedback}\r\n          onClick={props[feedback]}\r\n        >\r\n          {feedback}\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n  return <ul className={styles.statisticsList}>{BtnText}</ul>;\r\n};\r\n\r\nFeedbackOptions.prototype = {\r\n  goodIncrement: PropTypes.node,\r\n  neutralIncrement: PropTypes.node,\r\n  badIncrement: PropTypes.node,\r\n  feedbacks: PropTypes.arrayOf(PropTypes.string),\r\n};\r\nexport default FeedbackOptions;","import style from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport shortid from \"shortid\";\r\nconst Statistics = (props) => {\r\n  const ID = () => shortid.generate();\r\n  const feedbackMarckUp = props.feedbacks.map((feedback) => {\r\n    if (feedback === \"Positivefeedback\") {\r\n      return (\r\n        <li className={style.StatisticsItem} id={ID()}>\r\n          <p>Positive feedback : {props.Positivefeedback + \"%\"}</p>\r\n        </li>\r\n      );\r\n    }\r\n    return (\r\n      <li id={ID()}>\r\n        <p id={ID()}>\r\n          {feedback} : {props[feedback]}\r\n        </p>\r\n      </li>\r\n    );\r\n  });\r\n  return <ul className={style.StatisticsList}>{feedbackMarckUp}</ul>;\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positiveFeedbackPercentage: PropTypes.number,\r\n  feedback: PropTypes.arrayOf(PropTypes.string),\r\n};\r\nexport default Statistics;","import \"./App.css\";\nimport { useState } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const goodIncrement = () => {\n    setGood((state) => state + 1);\n  };\n  const neutralIncrement = () => {\n    setNeutral((state) => state + 1);\n  };\n  const badIncrement = () => {\n    setBad((state) => state + 1);\n  };\n  const countTotalFeedback = () => good + neutral + bad;\n  const countPositiveFeedbackPercentage = () =>\n    good / (countTotalFeedback() / 100);\n  return (\n    <div>\n      <Section title=\"Statistic\">\n        <FeedbackOptions\n          good={goodIncrement}\n          neutral={neutralIncrement}\n          bad={badIncrement}\n          feedbacks={[\"good\", \"neutral\", \"bad\"]}\n        />\n      </Section>\n      <Section title=\"Statistic\">\n        {countTotalFeedback() === 0 ? (\n          <h3>no feedback given</h3>\n        ) : (\n          <Statistics\n            feedbacks={[\"good\", \"neutral\", \"bad\", \"total\", \"Positivefeedback\"]}\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            Positivefeedback={countPositiveFeedbackPercentage()}\n          />\n        )}\n      </Section>\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"FeedbackOptions_statisticsList__M-PHM\",\"statisticsItem\":\"FeedbackOptions_statisticsItem__5bORj\",\"statisticsText\":\"FeedbackOptions_statisticsText__34kPk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__2qmKN\",\"SectionTitle\":\"Section_SectionTitle__2weVh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatisticsList\":\"Statistics_StatisticsList__21mhy\",\"StatisticsItem\":\"Statistics_StatisticsItem__3-vih\"};"],"sourceRoot":""}